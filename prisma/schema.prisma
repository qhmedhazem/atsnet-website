datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  username  String   @unique
  fullname  String
  avatarURL String?  
  password  String
  lastPasswordChange DateTime?
  role      Role     @default(STUDENT)
  createdAt DateTime @default(now())
  annoncements     Annoncement[] @relation("userAnnoncements")
  events     Event[] @relation("userEvents")
  attachments  Attachment[] @relation("userAttachments")
}

model Attachment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  user      User     @relation("userAttachments", fields: [userId], references: [id])
  extension String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Annoncement {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
  published Boolean  @default(false)
  title     String
  content   String
  imageURL  String?
  author    User?    @relation("userAnnoncements", fields: [authorId], references: [id])
  authorId  String   @db.ObjectId
}

model Event {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean  @default(false)
  title     String
  content   String
  imageURL  String?
  registerLink  String
  date      DateTime
  author    User?    @relation("userEvents", fields: [authorId], references: [id])
  authorId  String   @db.ObjectId
}

model Message {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    name      String
    email     String
    phone     String
    content   String
    replied   Boolean
    createdAt DateTime @default(now())
}

enum Role {
  STUDENT
  TEACHER
  ADMIN
  STAFF
}